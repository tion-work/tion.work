# Cursor Rules for tion.work

## 项目上下文
这是一个多前端 + 单后端的开发者工具集合平台，使用 Next.js + TypeScript + Go 技术栈。

## 开发环境
- 所有开发都在 Docker 容器中进行
- 使用 `make` 命令管理项目
- 聊天应用用于 AI 协作开发

## 代码风格

### TypeScript/React
- 使用函数组件和 Hooks
- 严格 TypeScript 类型检查
- 使用 Tailwind CSS 进行样式设计
- 遵循 Next.js App Router 模式
- 使用 shadcn/ui 组件库

### Go
- 遵循 Go 语言最佳实践
- 使用 Gin 框架
- 完善的错误处理
- 使用 GORM 进行数据库操作

### 通用原则
- 保持代码简洁和可读性
- 添加适当的注释
- 遵循项目现有的架构模式
- 优先修复现有问题

## 文件结构规范
- 组件放在 `components/` 目录
- 工具函数放在 `utils/` 目录
- 类型定义放在 `types/` 目录
- 常量放在 `constants/` 目录

## 多语言支持
- 所有用户界面文本都需要支持国际化
- 使用 i18n 键值对
- 支持中文、英文、日文

## 响应式设计
- 移动端优先设计
- 使用 Tailwind CSS 响应式类
- 确保在各种屏幕尺寸下正常显示

## 性能优化
- 使用 Next.js 的优化功能
- 图片优化和懒加载
- 代码分割和动态导入
- 避免不必要的重渲染

## 错误处理
- 提供用户友好的错误信息
- 使用 try-catch 处理异步操作
- 实现错误边界组件

## 测试
- 编写单元测试
- 测试用户交互
- 确保代码覆盖率

## 文档
- 更新 README 文件
- 添加代码注释
- 维护 API 文档

## 安全
- 验证用户输入
- 防止 XSS 攻击
- 使用 HTTPS
- 保护敏感数据

## 协作
- 通过聊天应用与 AI 协作
- 提供清晰的反馈
- 分步执行复杂任务
- 验证修改结果
